{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://hangman/./src/hangman.ts","webpack://hangman/./src/main.ts","webpack://hangman/./src/requests.ts","webpack://hangman/webpack/bootstrap","webpack://hangman/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = void 0;\nvar GameStatus;\n(function (GameStatus) {\n    GameStatus[GameStatus[\"Playing\"] = 0] = \"Playing\";\n    GameStatus[GameStatus[\"Finished\"] = 1] = \"Finished\";\n    GameStatus[GameStatus[\"Failed\"] = 2] = \"Failed\";\n})(GameStatus || (GameStatus = {}));\nclass Hangman {\n    constructor(word, remainingGuesses) {\n        this.word = word.toLowerCase().split('');\n        this.remainingGuesses = remainingGuesses;\n        this.guessedLetters = [];\n        this.status = GameStatus.Playing;\n    }\n    /**\n     * Calculates the status of the game.\n     */\n    calculateStatus() {\n        const finished = this.word.every((letter) => this.guessedLetters.includes(letter) || letter === ' ');\n        if (this.remainingGuesses === 0) {\n            this.status = GameStatus.Failed;\n        }\n        else if (finished) {\n            this.status = GameStatus.Finished;\n        }\n        else {\n            this.status = GameStatus.Playing;\n        }\n    }\n    /**\n     * Returns the status message for the game.\n     */\n    get statusMessage() {\n        if (this.status === GameStatus.Playing) {\n            return `Guesses left: ${this.remainingGuesses}`;\n        }\n        else if (this.status === GameStatus.Failed) {\n            return `Nice try! The word was \"${this.word.join('')}\".`;\n        }\n        else {\n            return 'Great work! You guessed the word.';\n        }\n    }\n    /**\n     * Returns the puzzle for the game.\n     */\n    get puzzle() {\n        let puzzle = '';\n        this.word.forEach((letter) => {\n            if (this.guessedLetters.includes(letter) || letter === ' ') {\n                puzzle += letter;\n            }\n            else {\n                puzzle += '*';\n            }\n        });\n        return puzzle;\n    }\n    /**\n     * Updates the games state based on the given guess.\n     * @param guess The letter to guess.\n     */\n    makeGuess(guess) {\n        guess = guess.toLowerCase();\n        const isUnique = !this.guessedLetters.includes(guess);\n        const isBadGuess = !this.word.includes(guess);\n        if (this.status !== GameStatus.Playing)\n            return;\n        if (isUnique) {\n            this.guessedLetters = [...this.guessedLetters, guess];\n        }\n        if (isUnique && isBadGuess) {\n            this.remainingGuesses--;\n        }\n        this.calculateStatus();\n    }\n}\nexports.default = Hangman;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst hangman_1 = __importDefault(require(\"./hangman\"));\nconst requests_1 = __importDefault(require(\"./requests\"));\nconst $puzzle = document.querySelector('#puzzle');\nconst $guesses = document.querySelector('#guesses');\nlet game;\nwindow.addEventListener('keypress', (e) => {\n    const guess = e.key;\n    game.makeGuess(guess);\n    render();\n});\n/**\n * Renders the game state to the DOM.\n */\nconst render = () => {\n    $puzzle.textContent = '';\n    $guesses.textContent = game.statusMessage;\n    game.puzzle.split('').forEach((letter) => {\n        const $letter = document.createElement('span');\n        $letter.textContent = letter;\n        $puzzle.appendChild($letter);\n    });\n};\n/**\n * Starts a new game and renders the initial state.\n */\nconst startGame = () => __awaiter(void 0, void 0, void 0, function* () {\n    // Calculate a random number between 1 and 5\n    const randomWordLength = Math.floor(Math.random() * 5) + 1;\n    const puzzle = yield (0, requests_1.default)(randomWordLength);\n    game = new hangman_1.default(puzzle, 7);\n    render();\n});\nconst $reset = document.querySelector('#reset');\nif ($reset) {\n    $reset.addEventListener('click', startGame);\n}\nelse {\n    throw new Error(\"No reset button found in DOM.\");\n}\nstartGame();\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = void 0;\nconst getPuzzle = (wordCount) => __awaiter(void 0, void 0, void 0, function* () {\n    const response = yield fetch(`http://puzzle.mead.io/puzzle?wordCount=${wordCount}`);\n    if (response.status === 200) {\n        const data = yield response.json();\n        return data.puzzle;\n    }\n    else {\n        throw new Error('Unable to get puzzle');\n    }\n});\nexports.default = getPuzzle;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(519);\n"],"names":["GameStatus","Object","defineProperty","exports","value","constructor","word","remainingGuesses","this","toLowerCase","split","guessedLetters","status","Playing","calculateStatus","finished","every","letter","includes","Failed","Finished","statusMessage","join","puzzle","forEach","makeGuess","guess","isUnique","isBadGuess","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","hangman_1","requests_1","$puzzle","document","querySelector","$guesses","game","window","addEventListener","key","render","textContent","$letter","createElement","appendChild","startGame","randomWordLength","Math","floor","random","default","$reset","Error","wordCount","response","fetch","json","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","call"],"sourceRoot":""}